// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  firstName String?
  lastName  String?
  email     String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  threads   Thread[]
}

model AIModel {
  id           String   @id @default(uuid())
  name         String
  code         String
  description  String
  isActive     Boolean  @default(true)
  provider     String
  supportImage Boolean  @default(false)
  supportFile  Boolean  @default(false)
  hasReasoning Boolean  @default(false)
  isPremium    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Thread {
  id        String    @id @default(uuid())
  title     String
  model     String
  isPinned  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  User      User?     @relation(fields: [userId], references: [clerkId], onDelete: Cascade)
  userId    String?
  Message   Message[]

  @@index([userId, createdAt])
  @@index([updatedAt])
}

model Message {
  id          String   @id @default(uuid())
  content     String
  role        String
  model       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  attachments String[]
  Thread      Thread?  @relation(fields: [threadId], references: [id], onDelete: Cascade)
  threadId    String?

  @@unique([threadId, content, role], name: "unique_message")
  @@index([threadId, createdAt])
}
